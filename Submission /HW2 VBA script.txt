VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "Sheet1"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Sub stock_analysis()
 
' Define varaibles
    Dim ws As Worksheet
    Dim i As Long
    Dim j As Long
    Dim Ticker As String
    Dim change As Double
    Dim Value As Double
    Dim percentChange As Double
    Dim openingPrice As Double
    Dim closingPrice As Double
    Dim QuartelyChange As Double
    Dim TotalStockVolume As Double
    Dim rowCount As Long
    Dim outputRow As Long
    Dim greatestIncrease As Double
    Dim greastestDecrease As Double
    Dim greatestVolume As Double
    Dim stockWithGreatestIncrease As String
    Dim stockWithGreatestDecrease As String
    Dim stockWithGreatestVolume As String
    Dim ValueWithGreatestIncrease As String
    Dim ValueWithGreatestDecrease As String
    Dim ValueWithGreatestVolume As String
    
    ' Loop through each worksheet
    For Each ws In ThisWorkbook.Worksheets
    
    ' Create column headings
        ws.Range("I1").Value = "Ticker"
        ws.Range("J1").Value = "Quartely Change"
        ws.Range("K1").Value = "Percent Change"
        ws.Range("L1").Value = "Total Stock Volume"
        ws.Range("P1").Value = "Ticker"
        ws.Range("Q1").Value = "Value"
        ws.Range("O2").Value = "Greatest % increase"
        ws.Range("O3").Value = "Greatest % decrease"
        ws.Range("O4").Value = "Greatest Total Volume"
    
    ' get the row number of the last row with data
    rowCount = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
     Range("N2").Value = rowCount
     
     ' Initial outputRow
     outputRow = 2
     
     ' Initial TotalStockVolume
     TotalStockVolume = 0
     
     ' Initialize j for summing the stock volume
     j = 0
     
     ' Initialize variables for greatest values
        greatestIncrease = -1
        greatestDecrease = 1
        greatestVolume = 0
          
    ' Loop throughthe rows
    For i = 2 To rowCount
         ' If ticker changes  ot it's the last row, then print results
        If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Or i = rowCount Then
        ' Get the ticker symbol
        Ticker = ws.Cells(i, 1).Value
    
        ' Get the openingPrice
        openingPrice = ws.Cells(i, 3).Value

        ' Get the closingPrice
        closingPrice = ws.Cells(i, 6).Value

        ' Calculate quartelyChange
        QuartelyChange = closingPrice - openingPrice

        ' Calculate percentChange
        If openingPrice <> 0 Then
            percentChange = (QuartelyChange / openingPrice) * 100
    Else
            percentChange = 0
    End If

       ' Output the results
        ws.Cells(outputRow, 9) = Ticker
        ws.Cells(outputRow, 10) = QuartelyChange
        ws.Cells(outputRow, 11) = percentChange

        ' Calculate Total Stock Volume
        TotalStockVolume = Application.WorksheetFunction.Sum(ws.Range(ws.Cells(i - j, 7), ws.Cells(i, 7)))
        ws.Cells(outputRow, 12).Value = TotalStockVolume

        ' Format percentChange as percentage
        ws.Cells(outputRow, 11).NumberFormat = "0.00%"

        ' Conditional formatting for QuartelyChange
        If QuartelyChange > 0 Then
            ws.Cells(outputRow, 10).Interior.Color = RGB(0, 255, 0)
        ElseIf QuartelyChange < 0 Then
            ws.Cells(outputRow, 10).Interior.Color = RGB(225, 0, 0)
        End If
    
        ' Check for greatest increase
        If percentChange > greatestIncrease Then
            greatestIncrease = percentChange
            stockWithGreatestIncrease = Ticker
        End If
    
        ' Check for greatest decrease
        If percentChange < greatestDecrease Then
            greatestDecrease = percentChange
            stockWithGreatestDecrease = Ticker
        End If
    
        ' Check for greatest volume
        If TotalStockVolume > greatestVolume Then
            greatestVolume = TotalStockVolume
            stockWithGreatestVolume = Ticker
        End If
    
        ' Increment outputRow for results
            outputRow = outputRow + 1
    
        ' Reset TotalStockVolume for the next ticker
            TotalStockVolume = 0
    Else
        ' Accumulate TotalStockVolume for the current ticker
        TotalStockVolume = TotalStockVolume + Cells(i, 7).Value
    End If
Next i

    ' After the loop, output the greatest results
        ws.Cells(2, 16).Value = stockWithGreatestIncrease
        ws.Cells(3, 16).Value = stockWithGreatestDecrease
        ws.Cells(4, 16).Value = stockWithGreatestVolume
    
    ' Caluclate the value of the greatest increase, decrease and volum
        ws.Cells(2, 17).Value = greatestIncrease
        ws.Cells(3, 17).Value = greatestDecrease
        ws.Cells(4, 17).Value = greatestVolume
Next ws
    
MsgBox "Stock analysis complete"

End Sub
